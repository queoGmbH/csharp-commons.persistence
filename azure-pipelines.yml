# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - '*'

stages:
- stage: 'Build_and_test'
  displayName: 'Build and test package'

  jobs:
  - job: buildAndTest
  
    variables:
      buildConfiguration: 'Debug'
      pckVersion: 'beta-$(Build.BuildNumber)'
    
    steps:
    - script: echo '##vso[task.setvariable variable=pckVersion]alpha-$(Build.BuildNumber)'
      displayName: 'Set variable for master'

    - script: echo '##vso[task.setvariable variable=pckVersion]'
      displayName: 'Set variable for master'
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

    - script: echo '##vso[task.setvariable variable=pckVersion]beta-$(Build.BuildNumber)'
      displayName: 'Set variable for master'
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')

    - script: echo 'version number by branch set to:'
    - script: echo $(pckVersion)

    - task: NuGetToolInstaller@1
      inputs:
        versionSpec: '5.x'
  
    - task: NuGetAuthenticate@0
      inputs:
        nuGetServiceConnections: 'Nexus-NuGet Restore'

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'
        feedsToUse: 'config'
        nugetConfigPath: 'Build/nuget.config'
        includeNuGetOrg: true
        externalFeedCredentials: 'Nexus-NuGet Restore'
  
    - task: DotNetCoreCLI@2
      displayName: 'Build projects - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'
  
    
    - task: DotNetCoreCLI@2
      displayName: 'Install ReportGenerator'
      inputs:
        command: custom
        custom: tool
        arguments: 'install --global dotnet-reportgenerator-globaltool'
  
    - task: DotNetCoreCLI@2
      displayName: 'Run unit tests - $(buildConfiguration)'
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        publishTestResults: true
        arguments: '--no-build --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
  
    - script: echo "##vso[task.prependpath]$HOME/.dotnet/tools"
      displayName: 'workaround issue 9472'
    
    - script: |
        reportgenerator -reports:$(Build.SourcesDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines
      displayName: 'Create code coverage report'
    
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage report'
      inputs:
        codeCoverageTool: 'cobertura'
        summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
    
    - task: DotNetCoreCLI@2
      displayName: 'NuGet Pakete packen'
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'
        nobuild: true
        versioningScheme: 'off'
        buildProperties: 'VersionSuffix=$(pckVersion)'
        outputDir: '$(Build.ArtifactStagingDirectory)/packages'
        verbosityPack: 'normal'

    - publish: '$(Build.ArtifactStagingDirectory)/packages'
      artifact: 'NuGetPackages'

- stage: 'publish_package_to_Nexus'
  displayName: 'publish package to Nexus'
  dependsOn: 'Build_and_test'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  jobs:
  - job: 'publish_to_feed'
    steps:
    - checkout: none
    - script: echo 'building master therefore publish to feed'

    - download: current
      artifact: 'NuGetPackages'

    - task: NuGetToolInstaller@1
      inputs:
        versionSpec: '5.x'

    - task: NuGetCommand@2
      inputs:
        command: push
        nuGetFeedType: external
        packagesToPush: '$(Pipeline.Workspace)/NuGetPackages/*.nupkg'
        publishFeedCredentials: 'Nexus-NuGet Push'
        verbosityPush: 'Detailed'
